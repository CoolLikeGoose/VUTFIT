//
// Created by burluiva on 10/10/2023.
//

#ifndef IFJ2023_SWIFT_PARSER_H
#define IFJ2023_SWIFT_PARSER_H

#include "../model/grammar/grammar.h"
#include "../model/grammar/token/grammar_token.h"
#include "../structures/automata/automata.h"
#include "ll_parser/ll_parser.h"
#include "precedence_parser/precedence_parser.h"

typedef enum parser_mode_enum_t {
  LL_PARSER,
  P_PARSER,
} ParserMode;

typedef struct parser_t {
  ///the ll parser is used for statements + expression simplifying
  LLParser *llParser;
  ///used for expression parsing
  PParser *expressionParser;
} Parser;

typedef Error (*ParserConfiguratorFn)(Parser *parser);


void parser_init(Parser *parser);
void parser_configure(ParserConfiguratorFn parserConfiguratorFn);

///
/// \param parser configured parser
/// \param grammarToken init grammar token
/// \param tokens tokens generated by scanner
/// \param offset offset of tokenVector
/// \param finalToken token which is init state of parser
/// \return error != NONE -> problem happened
Error parser_parse(Parser *parser, GrammarToken *grammarToken,
                   TokenVector *tokens, int *offset, TokenType finalToken,
                   ParserMode mode);

#endif // IFJ2023_SWIFT_PARSER_H